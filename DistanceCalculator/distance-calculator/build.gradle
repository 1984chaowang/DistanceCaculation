/*
 * Copyright (c) 2017 Dell Inc., or its subsidiaries. All Rights Reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 */

plugins {
    id 'com.github.johnrengelman.shadow' version '5.1.0'
}

apply plugin: "java"
apply plugin: "maven"
apply plugin: "application"
apply plugin: "maven-publish"

group = "io.pravega.flinkapp"
version = 4.0
archivesBaseName = "distance-calculator"
description = "distance-calculator"
mainClassName = "io.pravega.flinkapp.DistanceCalculator"
sourceCompatibility = 1.8
targetCompatibility = 1.8

repositories {
    mavenLocal()
    mavenCentral()
    maven {
         url "https://repository.apache.org/snapshots"
            }
    maven {
        url "https://oss.sonatype.org/content/repositories/snapshots"
    }
    maven {
        url "https://oss.jfrog.org/jfrog-dependencies"
    }
}

dependencies {
   //Flink dependencies
    compile "org.apache.flink:flink-streaming-java_${flinkScalaVersion}:${flinkVersion}"
    compile "org.apache.flink:flink-streaming-scala_${flinkScalaVersion}:${flinkVersion}"
    compile "org.apache.flink:flink-clients_${flinkScalaVersion}:${flinkVersion}"
    compile "org.apache.flink:flink-table-api-scala-bridge_${flinkScalaVersion}:${flinkVersion}"
    compile "org.apache.flink:flink-table-api-java-bridge_${flinkScalaVersion}:${flinkVersion}"
    compile "org.apache.flink:flink-table-api-scala-bridge_${flinkScalaVersion}:${flinkVersion}"
    compile "org.apache.flink:flink-table-planner_${flinkScalaVersion}:${flinkVersion}"
    compile "org.apache.flink:flink-table-planner-blink_${flinkScalaVersion}:${flinkVersion}"
    compile "org.apache.flink:flink-streaming-scala_${flinkScalaVersion}:${flinkVersion}"
    compile "org.apache.flink:flink-table-common:${flinkVersion}"
    compile "org.apache.flink:flink-table-api-java-bridge_${flinkScalaVersion}:${flinkVersion}"
    compile "org.apache.flink:flink-json:${flinkVersion}"

    //Pravega dependencies
    compile "io.pravega:pravega-connectors-flink-${flinkShortVersion}_${flinkPravegaScalaVersion}:${pravegaFlinkConnectorVersion}"
    compile "io.pravega:pravega-client:${pravegaVersion}"
    if (includePravegaCredentials.toBoolean()) {
        compile "io.pravega:pravega-keycloak-client:${pravegaCredentialsVersion}"
    }

    // common-library dependencies
    compile "org.slf4j:slf4j-api:${slf4jApiVersion}"
    compile "ch.qos.logback:logback-classic:${logbackVersion}"
    compile "ch.qos.logback:logback-core:${logbackVersion}"
    compile "com.google.guava:guava:20.0"
    compile 'org.mongodb:mongo-java-driver:3.10.2'
    compile "org.xerial:sqlite-jdbc:3.20.0"
    compile "com.fasterxml.jackson.core:jackson-databind:2.9.1"


    compile 'org.influxdb:influxdb-java:2.15'
    testCompile "org.apache.flink:flink-test-utils_${flinkScalaVersion}:${flinkVersion}"
}

shadowJar {
    dependencies {
        exclude(dependency("org.scala-lang:scala-library"))
        exclude(dependency("org.scala-lang:scala-reflect"))
        exclude(dependency("org.scala-lang:scala-compiler"))
    }

    relocate "com.google", "com.dell.nautilus.analytics.shaded.com.google"
    relocate "io.netty", "com.dell.nautilus.analytics.shaded.io.netty"
    classifier = null
    zip64 true
}

distributions {
    main {
        baseName = archivesBaseName
        contents {
            into("lib") {
                from shadowJar
                from(project.configurations.shadow)
            }
        }
    }
}

publishing {
    repositories {
        maven {
            credentials {
                username = "${mavenUsername}"
                password = "${mavenPassword}"
            }
            url = "${projectRepoUrl}"
        }
    }

    publications {
        shadow(MavenPublication) { publication ->
            project.shadow.component(publication)
        }
    }
}


